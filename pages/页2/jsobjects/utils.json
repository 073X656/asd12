{
  "unpublishedCollection": {
    "name": "utils",
    "pageId": "é¡µ2",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmoduleContent: {},\n\taddQuestion: false,\n\tshowNewQuestion: false,\n\tnewQuestionType: '',\n\tnewQuizQuestions: [],\n\t\n\tsetNewQuestionType: (type) => {\n\t\tthis.newQuestionType = type;\n\t},\n\n\tsetNewQuizQuestions: (quizQuestions) => {\n\t\tthis.newQuizQuestions = quizQuestions;\n\t},\n\n\tsetAddQuestion: (isAddQuestion) => {\n\t\tthis.addQuestion = isAddQuestion;\n\t},\n\n\tsetShowNewQuestion: (isShowNewQuestion) => {\n\t\tthis.showNewQuestion = isShowNewQuestion;\n\t},\n\n\tsetModuleContent: async (moduleContent) => {\n\t\tconst quiz = await fetchQuizContent.run({\n\t\t\tid: moduleContent.id\n\t\t});\n\t\tconst contentType = moduleContent.content_type;\n\t\tlet content;\n\n\t\tif (contentType === 'Reading Material') {\n\t\t\tcontent = await fetchReadingContent.run({id: moduleContent.id});\n\t\t}\n\t\tif (contentType === 'Video') {\n\t\t\tconsole.log(moduleContent)\n\t\t\tcontent = await fetchVideoContent.run({id: moduleContent.id});\n\t\t}\n\t\tif (contentType === 'Quiz') {\n\t\t\tconst quizQuestions = await fetchQuizQuestions.run({quizId: quiz[0].id});\n\t\t\tcontent = [{\n\t\t\t\t...quiz[0],\n\t\t\t\tquestions: quizQuestions\n\t\t\t}]\n\t\t}\n\n\t\tthis.moduleContent = {\n\t\t\tmoduleContent,\n\t\t\tcontent: content.length > 0 ? content[0] : undefined,\n\t\t}\n\t},\n\n\tupdateVideoContent: async () => {\n\t\tawait patchVideoContent.run();\n\t\tcloseModal('mdl_manageContent');\n\t\tshowAlert('Content Updated!', 'success')\n\t},\n\n\tupdateReadingContent: async () => {\n\t\tawait patchReadingContent.run()\n\t\tcloseModal('mdl_manageContent');\n\t\tshowAlert('Content Updated!', 'success')\n\t},\n\n\tdeleteContent: async () => {\n\t\tif (this.moduleContent.moduleContent.content_type === 'Video') {\n\t\t\tawait deleteVideoContent.run();\n\t\t}\n\t\tcloseModal('mdl_manageContent');\n\t\tshowAlert('Content Deleted!', 'success')\n\t},\n\n\tupdateQuiz: async () => {\n\t\tconst quiz = lst_updateQuiz.selectedItem;\n\t\tlet quizQuestion;\n\t\tif (quiz.type === 'Single Answer') {\n\t\t\tquizQuestion = {\n\t\t\t\tid: quiz.id,\n\t\t\t\tanswer: inp_updateSingleAnswer.text,\n\t\t\t\tanswerOptions: null\n\t\t\t}\n\t\t};\n\t\tif (quiz.type === 'True or False') {\n\t\t\tquizQuestion = {\n\t\t\t\tid: quiz.id,\n\t\t\t\tanswer: rad_updateBooleanAnswer.selectedOptionValue,\n\t\t\t\tanswerOptions: null\n\t\t\t}\n\t\t}\n\t\tif (quiz.type === 'Multiple choice') {\n\n\t\t\tlet answer = '';\n\n\t\t\tif (chk_updateMultiChoiceAnswerA.isChecked) {\n\t\t\t\tif (answer.length > 0) {\n\t\t\t\t\tanswer += \",\"\n\t\t\t\t}\n\t\t\t\tanswer += inp_updateMultiChoiceA.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerB.isChecked) {\n\t\t\t\tif (answer.length > 0) {\n\t\t\t\t\tanswer += \",\"\n\t\t\t\t}\n\t\t\t\tanswer += inp_updateMultiChoiceB.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerC.isChecked) {\n\t\t\t\tif (answer.length > 0) {\n\t\t\t\t\tanswer += \",\"\n\t\t\t\t}\n\t\t\t\tanswer += inp_updateMultiChoiceC.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerD.isChecked) {\n\t\t\t\tif (answer.length > 0) {\n\t\t\t\t\tanswer += \",\"\n\t\t\t\t}\n\t\t\t\tanswer += inp_updateMultiChoiceD.text\n\t\t\t}\n\n\t\t\tquizQuestion = {\n\t\t\t\tid: quiz.id,\n\t\t\t\tanswer,\n\t\t\t\tanswerOptions: inp_updateMultiChoiceA.text + ',' + inp_updateMultiChoiceB.text + ',' + inp_updateMultiChoiceC.text + ',' + inp_updateMultiChoiceD.text, \n\t\t\t}\n\t\t}\n\n\t\tawait patchQuizContent.run();\n\t\tawait patchQuizQuestion.run(quizQuestion);\n\n\t\tcloseModal('mdl_manageContent');\n\t\tshowAlert('Quiz Content Updated!', 'success')\n\t},\n\n\tcreateQuizQuestion: async () => {\n\t\tlet answerOptions = '';\n\t\tlet answer = '';\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'Multiple choice') {\n\t\t\tanswerOptions = inp_updateMultiChoiceA.text + ',' + inp_updateMultiChoiceB.text + ',' + inp_updateMultiChoiceC.text + ',' + inp_updateMultiChoiceD.text;\n\t\t}\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'Single Answer') {\n\t\t\tanswerOptions = inp_updateSingleAnswer.text;\n\t\t}\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'True or False') {\n\t\t\tanswerOptions = 'True, False'\n\t\t}\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'Single Answer') {\n\t\t\tanswer = inp_updateSingleAnswer.text;\n\t\t};\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'True or False') {\n\t\t\tanswer = rad_updateBooleanAnswer.selectedOptionValue;\n\t\t}\n\t\tif (sel_addQuizQuestionType.selectedOptionValue === 'Multiple choice') {\n\n\t\t\tlet singleAnswer = '';\n\n\t\t\tif (chk_updateMultiChoiceAnswerA.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_updateMultiChoiceA.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerB.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_updateMultiChoiceB.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerC.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_updateMultiChoiceC.text\n\t\t\t}\n\n\t\t\tif (chk_updateMultiChoiceAnswerD.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_updateMultiChoiceD.text\n\t\t\t}\n\n\t\t\tanswer = singleAnswer;\n\n\t\t}\n\t\tconst newQuestionArr = await createQuizQuestion.run({\n\t\t\ttype: sel_addQuizQuestionType.selectedOptionValue,\n\t\t\tquestion: rte_updateQuizQuestion.text,\n\t\t\tquizContentId: this.moduleContent.content.id,\n\t\t\tanswerOptions,\n\t\t\tanswer,\n\t\t});\n\n\t\tif (newQuestionArr && newQuestionArr.length > 0) {\n\t\t\tthis.setModuleContent({\n\t\t\t\t...this.moduleContent,\n\t\t\t\tcontent: {\n\t\t\t\t\t...this.moduleContent.content,\n\t\t\t\t\tquestions: {\n\t\t\t\t\t\t...this.moduleContent.content.questions,\n\t\t\t\t\t\t...newQuestionArr[0]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tresetWidget('lst_updateQuiz');\n\t\tawait this.setModuleContent(this.moduleContent.moduleContent);\n\t\tshowAlert('Quiz Question Added!', 'success')\n\t},\n\n\taddNewQuestion: () => {\n\t\tconst type = sel_newQuestionType.selectedOptionValue;\n\t\tlet question = rte_newQuizQuestion.text;\n\n\t\tif (type === 'Single Answer') {\n\t\t\tthis.newQuizQuestions = [\n\t\t\t\t...this.newQuizQuestions,\n\t\t\t\t{\n\t\t\t\t\tid: Math.random(),\n\t\t\t\t\tquestion,\n\t\t\t\t\tanswer: inp_newSingleAnswer.text,\n\t\t\t\t\tanswerOptions: null,\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\tif (type === 'True or False') {\n\t\t\tthis.newQuizQuestions = [\n\t\t\t\t...this.newQuizQuestions,\n\t\t\t\t{\n\t\t\t\t\tid: Math.random(),\n\t\t\t\t\tquestion,\n\t\t\t\t\tanswer: rad_newTrueOrFalse.selectedOptionValue,\n\t\t\t\t\tanswerOptions: null,\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\tif (type === 'Multiple choice') {\n\t\t\tlet singleAnswer = '';\n\n\t\t\tif (chk_newMultiChoiceAnswerA.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_newMultiChoiceA.text\n\t\t\t}\n\n\t\t\tif (chk_newMultiChoiceAnswerB.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_newMultiChoiceB.text\n\t\t\t}\n\n\t\t\tif (chk_newMultiChoiceAnswerC.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_newMultiChoiceC.text\n\t\t\t}\n\n\t\t\tif (chk_newMultiChoiceAnswerD.isChecked) {\n\t\t\t\tif (singleAnswer.length > 0) {\n\t\t\t\t\tsingleAnswer += \",\"\n\t\t\t\t}\n\t\t\t\tsingleAnswer += inp_newMultiChoiceD.text\n\t\t\t}\n\n\t\t\tthis.newQuizQuestions = [\n\t\t\t\t...this.newQuizQuestions,\n\t\t\t\t{\n\t\t\t\t\tid: Math.random(),\n\t\t\t\t\tquestion,\n\t\t\t\t\tanswer: singleAnswer,\n\t\t\t\t\tanswerOptions: inp_newMultiChoiceA.text + ',' + inp_newMultiChoiceB.text + ',' + inp_newMultiChoiceC.text + ',' + inp_newMultiChoiceD.text,\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\n\t\tresetWidget('rte_newQuizQuestion');\n\t\tresetWidget('sel_addQuizQuestionType');\n\t},\n\n\tremoveQuizContent: async () => {\n\t\tawait deleteQuizContent.run();\n\n\t\tcloseModal('mdl_manageContent');\n\t},\n\n\tcreateReadingMaterial: async () => {\n\t\tconst courseContentArr =  await createModuleContent.run({\n\t\t\ttitle: inp_newReadingTitle.text\n\t\t});\n\n\t\tif (courseContentArr && courseContentArr.length > 0) {\n\t\t\tawait createReadingContent.run({\n\t\t\t\tcourseContentId: courseContentArr[0].id\n\t\t\t})\n\t\t}\n\n\t\tcloseModal('mdl_addContent');\n\t\tshowAlert('Content Created!', 'success');\n\t},\n\n\tcreateVideoMaterial: async () => {\n\t\tconst courseContentArr =  await createModuleContent.run({\n\t\t\ttitle: inp_newVideoTitle.text\n\t\t});\n\n\t\tif (courseContentArr && courseContentArr.length > 0) {\n\t\t\tawait createVideoContent.run({\n\t\t\t\tcourseContentId: courseContentArr[0].id\n\t\t\t})\n\t\t}\n\n\t\tcloseModal('mdl_addContent');\n\t\tshowAlert('Content Created!', 'success');\n\t},\n\n\tcreateQuizMaterial: async () => {\n\t\tconst courseContentArr =  await createModuleContent.run({\n\t\t\ttitle: inp_newQuizTitle.text\n\t\t});\n\n\t\tif (courseContentArr && courseContentArr.length > 0) {\n\t\t\tif (utils.newQuizQuestions.length > 0) {\n\t\t\t\tconst quizContent = await createQuizContent.run({\n\t\t\t\t\tcourseModuleContentId: courseContentArr[0].id\n\t\t\t\t})\n\t\t\t\tconsole.log('quizContent', quizContent);\n\t\t\t\tif (quizContent && quizContent.length > 0) {\n\t\t\t\t\tutils.newQuizQuestions.map(async q => {\n\t\t\t\t\t\tawait createQuizQuestion.run({\n\t\t\t\t\t\t\ttype: sel_newQuestionType.selectedOptionValue,\n\t\t\t\t\t\t\tquestion: q.question,\n\t\t\t\t\t\t\tquizContentId: quizContent[0].id,\n\t\t\t\t\t\t\tanswerOptions: q.answerOptions,\n\t\t\t\t\t\t\tanswer: q.answer,\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcloseModal('mdl_addContent');\n\t\tshowAlert('Content Created!', 'success');\n\t},\n}",
    "variables": [
      {
        "name": "moduleContent",
        "value": "{}"
      },
      {
        "name": "addQuestion",
        "value": "false"
      },
      {
        "name": "showNewQuestion",
        "value": "false"
      },
      {
        "name": "newQuestionType",
        "value": "''"
      },
      {
        "name": "newQuizQuestions",
        "value": "[]"
      }
    ],
    "userPermissions": []
  },
  "id": "é¡µ2_utils",
  "deleted": false,
  "gitSyncId": "6461caf0d209002373fbd8c0_6467970f8769ff5afb1a9f03"
}